// <auto-generated />
using System;
using ChatApp.Business.Core.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatApp.Business.Core.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChatApp.Domain.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("BlobContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ChatApp.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresVerification")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isBlocked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 716, DateTimeKind.Local).AddTicks(7275),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 720, DateTimeKind.Local).AddTicks(4796),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9676),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9696),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9801),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9805),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9825),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9828),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9844),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9847),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9871),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9874),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9890),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9893),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9909),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9912),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9929),
                            Email = "Email@Email.com",
                            FirstName = "FirstName",
                            LastName = "LastName",
                            LastUpdated = new DateTime(2021, 11, 8, 14, 17, 25, 721, DateTimeKind.Local).AddTicks(9931),
                            PasswordHash = "",
                            RequiresVerification = false,
                            RoleId = 0,
                            UserName = "UserName",
                            isBlocked = false
                        });
                });

            modelBuilder.Entity("ChatApp.Domain.Models.Message", b =>
                {
                    b.HasOne("ChatApp.Domain.Models.User", null)
                        .WithMany("messagesIds")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ChatApp.Domain.Models.User", b =>
                {
                    b.Navigation("messagesIds");
                });
#pragma warning restore 612, 618
        }
    }
}
